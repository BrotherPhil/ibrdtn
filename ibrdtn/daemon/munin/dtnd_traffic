#!/usr/bin/env python

import os
import dtnstats
from munin import MuninPlugin

class DtnTrafficPlugin(MuninPlugin):
    title = "Traffic"
    args = "--base 1000 -l 0"
    vlabel = "throughput"
    scale = False
    category = "dtn"
    host = "localhost"
    port = 4550

    @property
    def fields(self):
        stats = dtnstats.DtnStats(self.host, self.port)
        stats.connect()
        data = stats.convergencelayers()

        ret = []
        
        for t in data:
            tag_label = t.split("|")
            label = tag_label[0].lower() + "_" + tag_label[1].lower()
            
            ret.append(
                (label, dict(
                    label = tag_label[0] + " " + tag_label[1],
                    info = 'Throughput (' + tag_label[1] + ') of ' + tag_label[0] + ' convergence layer',
                    type = "COUNTER",
                    min = "0")
                )
            )
        
        return ret

    def execute(self):
        stats = dtnstats.DtnStats(self.host, self.port)
        stats.connect()
        data = stats.convergencelayers()

        ret = {}

        for t, v in data.items():
            tag_label = t.split("|")
            tag_label[0] = tag_label[0].replace(":", "-")
            label = tag_label[0].lower() + "_" + tag_label[1].lower()
            ret[label] = float(v)

        return ret

        return dict(storage=data['Stored'])

if __name__ == "__main__":
    DtnTrafficPlugin().run()

