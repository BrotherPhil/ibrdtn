/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.7
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package de.tubs.ibr.dtn.swig;

public class CustodySignalBlock extends AdministrativeBlock {
  private long swigCPtr;

  protected CustodySignalBlock(long cPtr, boolean cMemoryOwn) {
    super(swigJNI.CustodySignalBlock_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(CustodySignalBlock obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        swigJNI.delete_CustodySignalBlock(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public CustodySignalBlock() {
    this(swigJNI.new_CustodySignalBlock(), true);
  }

  public void setMatch(SWIGTYPE_p_dtn__data__MetaBundle other) {
    swigJNI.CustodySignalBlock_setMatch__SWIG_0(swigCPtr, this, SWIGTYPE_p_dtn__data__MetaBundle.getCPtr(other));
  }

  public void setMatch(SWIGTYPE_p_dtn__data__Bundle other) {
    swigJNI.CustodySignalBlock_setMatch__SWIG_1(swigCPtr, this, SWIGTYPE_p_dtn__data__Bundle.getCPtr(other));
  }

  public boolean match(SWIGTYPE_p_dtn__data__Bundle other) {
    return swigJNI.CustodySignalBlock_match(swigCPtr, this, SWIGTYPE_p_dtn__data__Bundle.getCPtr(other));
  }

  public void read(SWIGTYPE_p_dtn__data__PayloadBlock p) {
    swigJNI.CustodySignalBlock_read(swigCPtr, this, SWIGTYPE_p_dtn__data__PayloadBlock.getCPtr(p));
  }

  public void write(SWIGTYPE_p_dtn__data__PayloadBlock p) {
    swigJNI.CustodySignalBlock_write(swigCPtr, this, SWIGTYPE_p_dtn__data__PayloadBlock.getCPtr(p));
  }

  public void set_custody_accepted(boolean value) {
    swigJNI.CustodySignalBlock__custody_accepted_set(swigCPtr, this, value);
  }

  public boolean get_custody_accepted() {
    return swigJNI.CustodySignalBlock__custody_accepted_get(swigCPtr, this);
  }

  public void set_reason(CustodySignalBlock.REASON_CODE value) {
    swigJNI.CustodySignalBlock__reason_set(swigCPtr, this, value.swigValue());
  }

  public CustodySignalBlock.REASON_CODE get_reason() {
    return CustodySignalBlock.REASON_CODE.swigToEnum(swigJNI.CustodySignalBlock__reason_get(swigCPtr, this));
  }

  public void set_fragment_offset(SDNV value) {
    swigJNI.CustodySignalBlock__fragment_offset_set(swigCPtr, this, SDNV.getCPtr(value), value);
  }

  public SDNV get_fragment_offset() {
    long cPtr = swigJNI.CustodySignalBlock__fragment_offset_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SDNV(cPtr, false);
  }

  public void set_fragment_length(SDNV value) {
    swigJNI.CustodySignalBlock__fragment_length_set(swigCPtr, this, SDNV.getCPtr(value), value);
  }

  public SDNV get_fragment_length() {
    long cPtr = swigJNI.CustodySignalBlock__fragment_length_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SDNV(cPtr, false);
  }

  public void set_timeofsignal(DTNTime value) {
    swigJNI.CustodySignalBlock__timeofsignal_set(swigCPtr, this, DTNTime.getCPtr(value), value);
  }

  public DTNTime get_timeofsignal() {
    long cPtr = swigJNI.CustodySignalBlock__timeofsignal_get(swigCPtr, this);
    return (cPtr == 0) ? null : new DTNTime(cPtr, false);
  }

  public void set_bundle_timestamp(SDNV value) {
    swigJNI.CustodySignalBlock__bundle_timestamp_set(swigCPtr, this, SDNV.getCPtr(value), value);
  }

  public SDNV get_bundle_timestamp() {
    long cPtr = swigJNI.CustodySignalBlock__bundle_timestamp_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SDNV(cPtr, false);
  }

  public void set_bundle_sequence(SDNV value) {
    swigJNI.CustodySignalBlock__bundle_sequence_set(swigCPtr, this, SDNV.getCPtr(value), value);
  }

  public SDNV get_bundle_sequence() {
    long cPtr = swigJNI.CustodySignalBlock__bundle_sequence_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SDNV(cPtr, false);
  }

  public void set_source(EID value) {
    swigJNI.CustodySignalBlock__source_set(swigCPtr, this, EID.getCPtr(value), value);
  }

  public EID get_source() {
    long cPtr = swigJNI.CustodySignalBlock__source_get(swigCPtr, this);
    return (cPtr == 0) ? null : new EID(cPtr, false);
  }

  public final static class REASON_CODE {
    public final static CustodySignalBlock.REASON_CODE NO_ADDITIONAL_INFORMATION = new CustodySignalBlock.REASON_CODE("NO_ADDITIONAL_INFORMATION", swigJNI.CustodySignalBlock_NO_ADDITIONAL_INFORMATION_get());
    public final static CustodySignalBlock.REASON_CODE RESERVED_01 = new CustodySignalBlock.REASON_CODE("RESERVED_01", swigJNI.CustodySignalBlock_RESERVED_01_get());
    public final static CustodySignalBlock.REASON_CODE RESERVED_02 = new CustodySignalBlock.REASON_CODE("RESERVED_02", swigJNI.CustodySignalBlock_RESERVED_02_get());
    public final static CustodySignalBlock.REASON_CODE REDUNDANT_RECEPTION = new CustodySignalBlock.REASON_CODE("REDUNDANT_RECEPTION", swigJNI.CustodySignalBlock_REDUNDANT_RECEPTION_get());
    public final static CustodySignalBlock.REASON_CODE DEPLETED_STORAGE = new CustodySignalBlock.REASON_CODE("DEPLETED_STORAGE", swigJNI.CustodySignalBlock_DEPLETED_STORAGE_get());
    public final static CustodySignalBlock.REASON_CODE DESTINATION_ENDPOINT_ID_UNINTELLIGIBLE = new CustodySignalBlock.REASON_CODE("DESTINATION_ENDPOINT_ID_UNINTELLIGIBLE", swigJNI.CustodySignalBlock_DESTINATION_ENDPOINT_ID_UNINTELLIGIBLE_get());
    public final static CustodySignalBlock.REASON_CODE NO_KNOWN_ROUTE_TO_DESTINATION_FROM_HERE = new CustodySignalBlock.REASON_CODE("NO_KNOWN_ROUTE_TO_DESTINATION_FROM_HERE", swigJNI.CustodySignalBlock_NO_KNOWN_ROUTE_TO_DESTINATION_FROM_HERE_get());
    public final static CustodySignalBlock.REASON_CODE NO_TIMELY_CONTACT_WITH_NEXT_NODE_ON_ROUTE = new CustodySignalBlock.REASON_CODE("NO_TIMELY_CONTACT_WITH_NEXT_NODE_ON_ROUTE", swigJNI.CustodySignalBlock_NO_TIMELY_CONTACT_WITH_NEXT_NODE_ON_ROUTE_get());
    public final static CustodySignalBlock.REASON_CODE BLOCK_UNINTELLIGIBLE = new CustodySignalBlock.REASON_CODE("BLOCK_UNINTELLIGIBLE", swigJNI.CustodySignalBlock_BLOCK_UNINTELLIGIBLE_get());

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static REASON_CODE swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + REASON_CODE.class + " with value " + swigValue);
    }

    private REASON_CODE(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private REASON_CODE(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private REASON_CODE(String swigName, REASON_CODE swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static REASON_CODE[] swigValues = { NO_ADDITIONAL_INFORMATION, RESERVED_01, RESERVED_02, REDUNDANT_RECEPTION, DEPLETED_STORAGE, DESTINATION_ENDPOINT_ID_UNINTELLIGIBLE, NO_KNOWN_ROUTE_TO_DESTINATION_FROM_HERE, NO_TIMELY_CONTACT_WITH_NEXT_NODE_ON_ROUTE, BLOCK_UNINTELLIGIBLE };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

}
